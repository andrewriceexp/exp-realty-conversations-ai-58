
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uttebgyhijrdcjiczxrg.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InV0dGViZ3loaWpyZGNqaWN6eHJnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY0NzQ2MzEsImV4cCI6MjA2MjA1MDYzMX0.8jRBYW1bNmABnLP45sIGd6M_7WQpwfv8munys4NbCAA";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Use enhanced security configuration
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
  }
});

// Add runtime protection
(function() {
  // Monitor for XSS attempts targeting Supabase tokens
  const observer = new MutationObserver(() => {
    const storedItems = Object.keys(localStorage).filter(
      key => key.startsWith('supabase.auth.') || key.includes('sb-')
    );
    
    // Check if any token is exposed in the DOM (potential data leak)
    storedItems.forEach(key => {
      const value = localStorage.getItem(key);
      if (value && document.body.innerHTML.includes(value)) {
        console.error('Security alert: Authentication token detected in DOM!');
        // In production, you might want to log this securely
      }
    });
  });
  
  // Start monitoring for security issues
  observer.observe(document.body, { childList: true, subtree: true });
})();
